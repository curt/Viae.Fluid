name: Build and Publish

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: "10.0.x"
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for GitVersioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install Nerdbank.GitVersioning
        run: dotnet tool install -g nbgv

      - name: Set version
        id: nbgv
        run: |
          nbgv cloud
          echo "Version=$(nbgv get-version -v NuGetPackageVersion)" >> $GITHUB_OUTPUT

      - name: Display build information
        run: |
          echo "Building version ${{ steps.nbgv.outputs.Version }}"
          echo "NuGet push enabled: ${{ vars.ENABLE_NUGET_PUSH }}"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Pack
        run: dotnet pack --configuration Release --no-build --output ./artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-${{ steps.nbgv.outputs.Version }}
          path: ./artifacts/*.nupkg

      - name: Merge coverage reports
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:TestResults/**/coverage.cobertura.xml \
                          -targetdir:CoverallsOutput \
                          -reporttypes:Cobertura

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: CoverallsOutput/Cobertura.xml

      - name: Publish to NuGet
        if: github.event_name == 'push' && vars.ENABLE_NUGET_PUSH == 'true'
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --source ${{ env.NUGET_SOURCE }} \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate

      - name: NuGet publishing skipped
        if: (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v')) && vars.ENABLE_NUGET_PUSH != 'true'
        run: |
          echo "::notice::NuGet publishing is disabled. Set ENABLE_NUGET_PUSH repository variable to 'true' to enable."
          echo "Packages are available as build artifacts for local testing."

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.nupkg
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
